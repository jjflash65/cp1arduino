/* -----------------------------------------------------
                     cp1_oled_demo.ino

     Demoprogramm fuer ein SSH1306 OLED Display am
     CP1+ Board.

     Board : CP1+
     F_CPU : 8 MHz intern

     28.01.2021        R. Seelig

  ------------------------------------------------------ */
/*

    Pinbelegung:

       CP1+     ATmega328    Arduino    Display
    ----------------------------------------------------

      Port 1

       GND                                GND        (1)
       +5V                                Vcc        (2)
       P1_0  ---   PD6   ---   D6   ---   D0 (CLK)   (3)
       P1_1  ---   PD7   ---   D7   ---   D1 (MOSI)  (4)
       P1_2  ---   PB0   ---   D8   ---   RST        (5)
       P1_3  ---   PB1   ---   D9   ---   DC         (6)
       P1_4  ---   PB2   ---   D10  ---   CE         (7)

      Port 2

       GND                                GND        (1)
       +5V                                Vcc        (2)
       P2_0  ---   PC0   ---   A0   ---   D0 (CLK)   (3)
       P2_1  ---   PC1   ---   A1   ---   D1 (MOSI)  (4)
       P2_2  ---   PC2   ---   A2   ---   RST        (5)
       P2_3  ---   PC3   ---   A3   ---   DC         (6)
       P2_4  ---   PD4   ---    4   ---   CE         (7)


           G   V           R
           N   c   D   D   E   D   C
           D   c   0   1   S   C   s
       +-------------------------------+
       |   o   o   o   o   o   o   o   |
       |                               |
       |   -------------------------   |
       |  |                         |  |
       |  |                         |  |
       |  |                         |  |
       |  |                         |  |
       |  |                         |  |
       |  |                         |  |
       |   -----+-------------+-----   |
       |        |             |        |
       |        +-------------+        |
       +-------------------------------+

*/

#include "cp1_oled.h"
#include "cp1_printf.h"

// Bitmap am Ende der Quelldatei
extern const uint8_t PROGMEM manga_oled_bmp[573];

oled  tft(1);

/* --------------------------------------------------
                       my_putchar
                       
     wird zwingend "cp1_printf.cpp" benoetigt! 
     Ueber diese Funktion erfolgen die Ausgaben von
     printf                       
   -------------------------------------------------- */
void my_putchar(char ch)
{
  tft.directputchar(ch);
}

uint16_t counter = 0;

/*  ---------------------------------------------------------
                             setup
    --------------------------------------------------------- */
void setup() 
{
  tft.fb_clear();
  tft.clrscr();
}

/*  ---------------------------------------------------------
                             loop
    --------------------------------------------------------- */
void loop() 
{ 
  tft.fb_clear();
  tft.clrscr();

  tft.fillcircle(64, 32, 22, 1);
  tft.line(0,0, 127,63, 2);
  tft.line(0,32, 127, 32, 2);

  tft.outtextxy(32,1, "Hallo CP1+");

  tft.fb_show(0,0);

  delay(2000);
  
  tft.fb_clear();
  tft.clrscr();
  
  tft.bmpsw_show(1,0, &manga_oled_bmp[0], 1);
  tft.fb_show(0,0);
  tft.gotoxy(9,2);
  tft.doublechar= 1;
  printf("BMP");
  tft.doublechar= 0;
  tft.gotoxy(9,4);
  printf("Picture");

  delay(2000);  
}


/*  ---------------------------------------------------------
                 Manga-Bitmap aus *.BMP Datei
    --------------------------------------------------------- */

const uint8_t manga_oled_bmp[573] PROGMEM = {

  0x00, 0x41, 0x00, 0x3F,
  0xAA, 0xAF, 0xEA, 0xA8, 0x28, 0x2A, 0x32, 0xAA, 0x80,
  0xD5, 0xDF, 0x55, 0x54, 0x55, 0x54, 0x71, 0x55, 0x00,
  0xAA, 0xEA, 0xAA, 0xA8, 0xA8, 0x2A, 0xF2, 0x8A, 0x80,
  0xD5, 0x65, 0x15, 0x50, 0x54, 0x14, 0xF1, 0x15, 0x00,
  0xAE, 0xEA, 0x28, 0xA0, 0xAA, 0x28, 0xF2, 0x8A, 0x80,
  0xDD, 0x44, 0x45, 0x50, 0x54, 0x15, 0xF5, 0x45, 0x00,
  0xAE, 0x8A, 0x88, 0xA0, 0x2A, 0x29, 0xE2, 0x2A, 0x00,
  0xDF, 0x54, 0x50, 0x51, 0x55, 0x51, 0x04, 0x04, 0x80,
  0xBE, 0x8A, 0xA6, 0x23, 0x2A, 0x02, 0x08, 0x09, 0x80,
  0xDD, 0x44, 0x5F, 0x07, 0x15, 0x47, 0x13, 0x13, 0x00,
  0xBE, 0x82, 0x9F, 0x8F, 0x8A, 0x6E, 0x47, 0x83, 0x00,
  0xF1, 0x50, 0x58, 0x0F, 0x94, 0x7F, 0xCF, 0xC1, 0x00,
  0xAA, 0x8A, 0x47, 0xA1, 0xCA, 0xF0, 0x3F, 0x9C, 0x80,
  0xD1, 0x48, 0x9C, 0x03, 0xE4, 0xFF, 0xFF, 0xFC, 0x00,
  0xAA, 0xAC, 0xF1, 0xFF, 0xE4, 0xF8, 0x03, 0xFC, 0x00,
  0xD1, 0x4F, 0xC0, 0x01, 0xF1, 0xF0, 0x00, 0xFD, 0x00,
  0xA8, 0xAE, 0x00, 0x00, 0xFD, 0xC0, 0x00, 0x3F, 0x80,
  0xD4, 0x50, 0x00, 0x80, 0x3F, 0x80, 0x14, 0x01, 0x80,
  0xAA, 0x38, 0x0C, 0x23, 0xFF, 0xE3, 0x08, 0x81, 0x00,
  0x95, 0x1C, 0xCC, 0x45, 0xFF, 0xF3, 0x1C, 0x00, 0x00,
  0xAA, 0x32, 0x80, 0xE3, 0xFF, 0xF0, 0x38, 0x9F, 0x80,
  0x94, 0x3E, 0x41, 0x47, 0xEF, 0xF8, 0x51, 0x3F, 0x80,
  0x88, 0x1F, 0x22, 0x8B, 0xFE, 0xFC, 0x02, 0x7F, 0x80,
  0xC1, 0xDF, 0xB0, 0x1F, 0xF7, 0xFF, 0x07, 0xFF, 0x00,
  0xA8, 0xEF, 0xF8, 0x7F, 0xED, 0xFF, 0xEF, 0xFF, 0x00,
  0xD4, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
  0xAA, 0xF7, 0x9F, 0xF7, 0x7F, 0xEF, 0x8F, 0xDE, 0x00,
  0xD4, 0xF7, 0xF0, 0x0F, 0xF7, 0xFF, 0xF8, 0x3C, 0x80,
  0xFA, 0xF3, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFC, 0x80,
  0xF4, 0x7B, 0xFF, 0xFD, 0xF7, 0xFD, 0xDF, 0xF9, 0x80,
  0xBA, 0x39, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xF9, 0x80,
  0xF5, 0x1D, 0xFF, 0x57, 0xEF, 0xED, 0x5F, 0xF3, 0x80,
  0xA8, 0x08, 0xFE, 0xEB, 0xEF, 0xFA, 0xAB, 0xFB, 0x80,
  0xFA, 0x00, 0xFF, 0x56, 0xF3, 0xFF, 0x5F, 0xFE, 0x00,
  0xBA, 0x80, 0x7A, 0xAB, 0xFF, 0xFA, 0xAF, 0xF8, 0x80,
  0xBD, 0x40, 0x7F, 0x5F, 0xFF, 0xFD, 0x7F, 0xE1, 0x00,
  0xAE, 0xA0, 0x3E, 0xB7, 0xFF, 0xBE, 0xB7, 0xC2, 0x80,
  0xDD, 0x54, 0x3F, 0xDB, 0xD0, 0x7D, 0xFF, 0x81, 0x00,
  0xBA, 0xA2, 0x1F, 0xFF, 0xFF, 0xFE, 0xFF, 0xA0, 0x80,
  0xD5, 0x74, 0x0F, 0xFF, 0xF9, 0xFF, 0xFE, 0x50, 0x00,
  0xBB, 0xE2, 0x03, 0xFF, 0xFF, 0xFF, 0xFC, 0xA8, 0x80,
  0xD5, 0xD5, 0x01, 0xFF, 0xFF, 0xFF, 0xF9, 0x54, 0x00,
  0xAB, 0xEA, 0x08, 0xFF, 0xFF, 0xFF, 0xE0, 0xAA, 0x00,
  0xF7, 0x74, 0x02, 0x3F, 0xFF, 0xFF, 0xC1, 0x74, 0x00,
  0xAE, 0xFB, 0x20, 0x9F, 0xFF, 0xFF, 0x02, 0xAA, 0x00,
  0xDD, 0xF5, 0x10, 0x07, 0xFF, 0xFC, 0x04, 0x7D, 0x00,
  0xAB, 0xAA, 0xA0, 0x81, 0xFF, 0xF8, 0x0A, 0x3E, 0x00,
  0xD5, 0x5C, 0x51, 0x0C, 0x7F, 0xE0, 0x05, 0x55, 0x00,
  0xBA, 0x3A, 0x20, 0x0E, 0x1F, 0x80, 0x0A, 0x7E, 0x00,
  0xD4, 0x7F, 0x51, 0x0F, 0x00, 0x00, 0x04, 0x55, 0x80,
  0xA8, 0xAF, 0xEB, 0x8F, 0x80, 0x03, 0xE2, 0x3A, 0x80,
  0xC1, 0x57, 0xD1, 0xCF, 0x80, 0x0F, 0xFC, 0x35, 0x00,
  0xA2, 0xE8, 0xFF, 0x8F, 0xC0, 0x1F, 0xFE, 0x2A, 0x80,
  0xD1, 0x51, 0xF7, 0x4F, 0xE0, 0x3F, 0xFF, 0x75, 0x00,
  0xF8, 0xAB, 0xEF, 0xAF, 0xF8, 0x7F, 0xFF, 0xEA, 0x00,
  0xFE, 0x51, 0xF5, 0x47, 0xFF, 0xFF, 0xFF, 0xF4, 0x00,
  0xFF, 0x82, 0xBB, 0xA3, 0xFF, 0xFF, 0xFF, 0xFC, 0x00,
  0xFF, 0x85, 0x51, 0x47, 0xFF, 0xFF, 0xFF, 0xFF, 0x80,
  0xFF, 0xE2, 0xAA, 0xA7, 0xFF, 0xFF, 0xFF, 0xFF, 0x80,
  0xFF, 0xF3, 0x71, 0x47, 0xFF, 0xFF, 0xFF, 0xFF, 0x80,
  0xFF, 0xF8, 0xAA, 0xA7, 0xFF, 0xFF, 0xFF, 0xFF, 0x80,
  0xFF, 0xFC, 0x55, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0x80,
  0xFF, 0xFF, 0x28, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0x80 
};
